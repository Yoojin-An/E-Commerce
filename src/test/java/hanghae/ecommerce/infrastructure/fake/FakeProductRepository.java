package hanghae.ecommerce.infrastructure.fake;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.Optional;

import hanghae.ecommerce.product.dao.ProductRepository;
import hanghae.ecommerce.product.domain.Product;
import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@NoArgsConstructor
public class FakeProductRepository implements ProductRepository {

	private Long autoGeneratedId = 0L;
	private final List<Product> data = new ArrayList<>();

	@Override
	public Product create(Product product) {
		Product newProduct = Product.of(++autoGeneratedId, product.getName(), product.getStock());
		data.add(newProduct);
		return newProduct;
	}

	@Override
	public Product update(Product product) {
		data.removeIf(item -> Objects.equals(item.getId(), product.getId()));
		data.add(product);
		return product;
	}

	@Override
	public Optional<Product> findById(Long productId) {
		return data.stream().filter(item -> Objects.equals(item.getId(), productId)).findAny();
	}

	@Override
	public Boolean existsByName(String name) {
		return data.stream().anyMatch(product -> product.getName().equals(name));
	}

	public void clear() {
		data.clear();
		autoGeneratedId = 0L;
	}
}
